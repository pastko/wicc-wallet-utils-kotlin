plugins {
    id 'io.spring.dependency-management' version '1.0.11.RELEASE'
    id 'java'
    id 'project-report'
}

plugins {
    id 'java-library'
    id 'maven-publish'
    id 'maven'
    id 'eclipse'
}

group 'com.waykichain'
version '2.0'

apply plugin: 'java'
apply plugin: 'maven'
apply plugin: 'maven-publish'
apply plugin: 'java-library'

// In this section you declare where to find the dependencies of your project
repositories {
    mavenCentral()
    maven { url "https://jitpack.io" }
}

jar {
    baseName = 'wicc-walletj'
    version = '2.1.0'
    manifestContentCharset 'utf-8'
    metadataCharset 'utf-8'
    manifest {
        attributes "Main-Class": "com.waykichain.wallet"
    }

    if (project.hasProperty("wiccBuildJar")) {
        from {
            configurations.compile.collect { it.isDirectory() ? it : zipTree(it) }
        }
    }
}

dependencies {
    // This dependency is exported to consumers, that is to say found on their compile classpath.
    implementation 'org.apache.commons:commons-math3:3.6.1'
    compileOnly 'org.projectlombok:lombok:1.16.12'
//    annotationProcessor('org.projectlombok:lombok:1.16.12')

    implementation group: 'org.web3j', name: 'crypto', version: '3.3.1'
    implementation 'com.madgag.spongycastle:core:1.58.0.0'
    implementation 'com.lambdaworks:scrypt:1.4.0'
    implementation 'com.squareup.okhttp3:okhttp:3.9.1'
    implementation 'net.jcip:jcip-annotations:1.0'
    runtimeOnly 'org.fusesource.leveldbjni:leveldbjni-all:1.8'
    implementation group: 'org.fusesource.leveldbjni', name: 'leveldbjni', version: '1.7'
    implementation 'com.google.code.findbugs:jsr305:3.0.2'

    implementation 'com.google.guava:guava:21.0'
    implementation 'com.google.protobuf:protobuf-java:3.5.1'

    testImplementation 'junit:junit:4.12'
    testImplementation 'org.easymock:easymock:3.2'
    testImplementation 'com.fasterxml.jackson.core:jackson-databind:2.5.2'
    testImplementation 'org.slf4j:slf4j-jdk14:1.7.25'
    testImplementation 'org.fusesource.leveldbjni:leveldbjni-all:1.8'
}

task sourcesJar(type: Jar, dependsOn: classes) {
    classifier = 'sources'
    from sourceSets.main.allSource
}
artifacts {
    archives sourcesJar
}

publishing {
    publications {
        Production(MavenPublication) {
//            artifact("$buildDir/outputs/aar/${this.pkgArtifactId}-release.aar")
            artifacts {
                archives sourcesJar
            }
            version this.version
        }
    }
}
